variables:
  buildConfiguration: 'Release'

jobs:
- job: build_api
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - script: |
      dotnet publish CcgWorks.Api/CcgWorks.Api.csproj -c Release -o ./out
      docker build -t ccgworks-api CcgWorks.Api
      docker save -o $BUILD_ARTIFACTSTAGINGDIRECTORY/ccgworks-api.tar ccgworks-api
    name: build_api
    displayName: 'Build and publish dotnet api'

  - script: |
      cp Infrastructure/aws-ecr.yml $BUILD_ARTIFACTSTAGINGDIRECTORY/aws-ecr.yml
    name: copy_files
    displayName: 'Copy infra'

  - task: PublishBuildArtifacts@1
    inputs:
        artifactName: release

- job: build_web
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - script: |
      yarn install
      yarn build
      mkdir -p $BUILD_ARTIFACTSTAGINGDIRECTORY/web/
      cp -r dist $BUILD_ARTIFACTSTAGINGDIRECTORY/web/      
    name: build_web
    displayName: 'Build web'
    workingDirectory: Web

  - task: PublishBuildArtifacts@1
    inputs:
        artifactName: release